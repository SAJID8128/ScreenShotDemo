<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="5" hostname="SAJIDs-MBP.fios-router.home" name="screenshot.SimpleShotTests" tests="7" failures="0" timestamp="2021-06-24T08:00:12 EDT" time="-1624535936.000" errors="1">
  <testcase name="screenShot" time="-1624535936.000" classname="screenshot.SimpleShotTests">
    <error type="org.testng.TestNGException" message="
Can inject only one of &lt;ITestContext, XmlTest, Method, Object[], ITestResult&gt; into a @AfterMethod annotated screenShot.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated screenShot.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:437)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:351)
at org.testng.internal.Parameters.createParameters(Parameters.java:708)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:301)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:701)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:677)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:661)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- screenShot -->
  <system-out/>
  <testcase name="charactersClick" time="1.702" classname="screenshot.SimpleShotTests"/>
  <system-out/>
  <testcase name="spidermanClick" time="0.000" classname="screenshot.SimpleShotTests">
    <skipped/>
  </testcase> <!-- spidermanClick -->
  <system-out/>
  <testcase name="profileClick" time="0.000" classname="screenshot.SimpleShotTests">
    <skipped/>
  </testcase> <!-- profileClick -->
  <system-out/>
  <testcase name="moviesClick" time="0.000" classname="screenshot.SimpleShotTests">
    <skipped/>
  </testcase> <!-- moviesClick -->
  <system-out/>
  <testcase name="eternalsClick" time="0.000" classname="screenshot.SimpleShotTests">
    <skipped/>
  </testcase> <!-- eternalsClick -->
  <system-out/>
  <testcase name="teaserClick" time="0.000" classname="screenshot.SimpleShotTests">
    <skipped/>
  </testcase> <!-- teaserClick -->
  <system-out/>
</testsuite> <!-- screenshot.SimpleShotTests -->
